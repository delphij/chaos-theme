{{- $pages := where .Site.RegularPages "Type" "in" .Site.Params.mainSections -}}
{{- $limit := .Site.Config.Services.RSS.Limit -}}
{{- if ge $limit 1 -}}
{{- $pages = $pages | first $limit -}}
{{- end -}}
{{ printf "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>" | safeHTML }}
{{ "<?" | safeHTML }}xml-stylesheet type="text/xsl" href="{{ "atom.xsl" | absURL }}"{{ "?>" | safeHTML }}
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="{{ .Site.LanguageCode }}">
  <title>{{ .Site.Title }}</title>
  {{- with .Site.Params.Subtitle }}
  <subtitle>{{ . }}</subtitle>
  {{- end }}
  <id>{{ "/" | absLangURL }}</id>
  <author>
    <name>{{ .Site.Title }}</name>
    <uri>{{ "/" | absLangURL }}</uri>
  </author>
  <generator>Hugo gohugo.io</generator>
  {{- with .Site.Copyright }}
  <rights>{{ . }}</rights>
  {{- end }}
  {{- with .Site.Params.brand.icon }}
  <icon>{{ . | absURL }}</icon>
  {{- end }}
  {{- with .Site.Params.brand.logo }}
  <logo>{{ . | absURL }}</logo>
  {{- end }}
  <updated>{{ dateFormat "2006-01-02T15:04:05Z" now.UTC | safeHTML }}</updated>
  {{- with .OutputFormats.Get "ATOM" }}
  {{ printf `<link rel="self" type="%s" href="%s" hreflang="%s"/>` .MediaType.Type .Permalink $.Site.LanguageCode | safeHTML }}
  {{- end }}
  {{- range .AlternativeOutputFormats }}
  {{ printf `<link rel="alternate" type="%s" href="%s" hreflang="%s"/>` .MediaType.Type .Permalink $.Site.LanguageCode | safeHTML }}
  {{- end }}
  {{- range first 25 $pages }}
  <entry>
    <title>{{ .Title }}</title>
    <author>
      <name>Xin LI</name>
      <uri>https://www.delphij.net/</uri>
    </author>
    <id>{{ .Permalink }}</id>
    <link rel="alternate" type="text/html" href="{{ .Permalink }}"/>
    {{- if .IsTranslated -}}
    {{ range .Translations }}
    <link rel="alternate" href="{{ .Permalink }}" hreflang="{{ .Language.Lang }}"/>
    {{- end -}}
    {{ end }}
    <updated>{{ dateFormat "2006-01-02T15:04:05Z" .Lastmod.UTC | safeHTML }}</updated>
    <published>{{ dateFormat "2006-01-02T15:04:05Z" .Date.UTC | safeHTML }}</published>
    <summary type="html">{{ trim .Summary '\n' }}</summary>
    <content type="html" xml:base="{{ "/" | absLangURL }}">{{ "<![CDATA[" | safeHTML }}{{ .Content }}{{ "]]>" | safeHTML }}</content>
  </entry>
  {{- end }}
</feed>
